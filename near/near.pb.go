// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: near.proto

package near

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecutionOutcome_Outcome_Failure_InvalidTxError int32

const (
	ExecutionOutcome_Outcome_Failure_UNKNOWN                   ExecutionOutcome_Outcome_Failure_InvalidTxError = 0
	ExecutionOutcome_Outcome_Failure_INVALID_ACCESS_KEY_ERROR  ExecutionOutcome_Outcome_Failure_InvalidTxError = 1
	ExecutionOutcome_Outcome_Failure_INVALID_SIGNER_ID         ExecutionOutcome_Outcome_Failure_InvalidTxError = 2
	ExecutionOutcome_Outcome_Failure_SIGNER_DOES_NOT_EXIST     ExecutionOutcome_Outcome_Failure_InvalidTxError = 3
	ExecutionOutcome_Outcome_Failure_INVALID_NONCE             ExecutionOutcome_Outcome_Failure_InvalidTxError = 4
	ExecutionOutcome_Outcome_Failure_NONCE_TOO_LARGE           ExecutionOutcome_Outcome_Failure_InvalidTxError = 5
	ExecutionOutcome_Outcome_Failure_INVALID_RECEIVER_ID       ExecutionOutcome_Outcome_Failure_InvalidTxError = 6
	ExecutionOutcome_Outcome_Failure_INVALID_SIGNATURE         ExecutionOutcome_Outcome_Failure_InvalidTxError = 7
	ExecutionOutcome_Outcome_Failure_NOT_ENOUGH_BALANCE        ExecutionOutcome_Outcome_Failure_InvalidTxError = 8
	ExecutionOutcome_Outcome_Failure_LACK_BALANCE_FOR_STATE    ExecutionOutcome_Outcome_Failure_InvalidTxError = 9
	ExecutionOutcome_Outcome_Failure_COST_OVERFLOW             ExecutionOutcome_Outcome_Failure_InvalidTxError = 10
	ExecutionOutcome_Outcome_Failure_INVALID_CHAIN             ExecutionOutcome_Outcome_Failure_InvalidTxError = 11
	ExecutionOutcome_Outcome_Failure_EXPIRED                   ExecutionOutcome_Outcome_Failure_InvalidTxError = 12
	ExecutionOutcome_Outcome_Failure_ACTIONS_VALIDATION_ERROR  ExecutionOutcome_Outcome_Failure_InvalidTxError = 13
	ExecutionOutcome_Outcome_Failure_TRANSACTION_SIZE_EXCEEDED ExecutionOutcome_Outcome_Failure_InvalidTxError = 14
)

// Enum value maps for ExecutionOutcome_Outcome_Failure_InvalidTxError.
var (
	ExecutionOutcome_Outcome_Failure_InvalidTxError_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "INVALID_ACCESS_KEY_ERROR",
		2:  "INVALID_SIGNER_ID",
		3:  "SIGNER_DOES_NOT_EXIST",
		4:  "INVALID_NONCE",
		5:  "NONCE_TOO_LARGE",
		6:  "INVALID_RECEIVER_ID",
		7:  "INVALID_SIGNATURE",
		8:  "NOT_ENOUGH_BALANCE",
		9:  "LACK_BALANCE_FOR_STATE",
		10: "COST_OVERFLOW",
		11: "INVALID_CHAIN",
		12: "EXPIRED",
		13: "ACTIONS_VALIDATION_ERROR",
		14: "TRANSACTION_SIZE_EXCEEDED",
	}
	ExecutionOutcome_Outcome_Failure_InvalidTxError_value = map[string]int32{
		"UNKNOWN":                   0,
		"INVALID_ACCESS_KEY_ERROR":  1,
		"INVALID_SIGNER_ID":         2,
		"SIGNER_DOES_NOT_EXIST":     3,
		"INVALID_NONCE":             4,
		"NONCE_TOO_LARGE":           5,
		"INVALID_RECEIVER_ID":       6,
		"INVALID_SIGNATURE":         7,
		"NOT_ENOUGH_BALANCE":        8,
		"LACK_BALANCE_FOR_STATE":    9,
		"COST_OVERFLOW":             10,
		"INVALID_CHAIN":             11,
		"EXPIRED":                   12,
		"ACTIONS_VALIDATION_ERROR":  13,
		"TRANSACTION_SIZE_EXCEEDED": 14,
	}
)

func (x ExecutionOutcome_Outcome_Failure_InvalidTxError) Enum() *ExecutionOutcome_Outcome_Failure_InvalidTxError {
	p := new(ExecutionOutcome_Outcome_Failure_InvalidTxError)
	*p = x
	return p
}

func (x ExecutionOutcome_Outcome_Failure_InvalidTxError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionOutcome_Outcome_Failure_InvalidTxError) Descriptor() protoreflect.EnumDescriptor {
	return file_near_proto_enumTypes[0].Descriptor()
}

func (ExecutionOutcome_Outcome_Failure_InvalidTxError) Type() protoreflect.EnumType {
	return &file_near_proto_enumTypes[0]
}

func (x ExecutionOutcome_Outcome_Failure_InvalidTxError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_Failure_InvalidTxError.Descriptor instead.
func (ExecutionOutcome_Outcome_Failure_InvalidTxError) EnumDescriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 1, 0}
}

type ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind int32

const (
	ExecutionOutcome_Outcome_Failure_ActionError_UNKNOWN                                ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 0
	ExecutionOutcome_Outcome_Failure_ActionError_ACCOUNT_ALREADY_EXISTS                 ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 1
	ExecutionOutcome_Outcome_Failure_ActionError_ACCOUNT_DOES_NOT_EXIST                 ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 2
	ExecutionOutcome_Outcome_Failure_ActionError_CREATE_ACCOUNT_ONLY_BY_REGISTRAR       ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 3
	ExecutionOutcome_Outcome_Failure_ActionError_CREATE_ACCOUNT_NOT_ALLOWED             ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 4
	ExecutionOutcome_Outcome_Failure_ActionError_ACTOR_NO_PERMISSION                    ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 5
	ExecutionOutcome_Outcome_Failure_ActionError_DELETE_KEY_DOES_NOT_EXIST              ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 6
	ExecutionOutcome_Outcome_Failure_ActionError_ADD_KEY_ALREADY_EXISTS                 ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 7
	ExecutionOutcome_Outcome_Failure_ActionError_DELETE_ACCOUNT_STAKING                 ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 8
	ExecutionOutcome_Outcome_Failure_ActionError_LACK_BALANCE_FOR_STATE                 ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 9
	ExecutionOutcome_Outcome_Failure_ActionError_TRIES_TO_UNSTAKE                       ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 10
	ExecutionOutcome_Outcome_Failure_ActionError_TRIES_TO_STAKE                         ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 11
	ExecutionOutcome_Outcome_Failure_ActionError_INSUFFICIENT_STAKE                     ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 12
	ExecutionOutcome_Outcome_Failure_ActionError_FUNCTION_CALL_ERROR                    ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 13
	ExecutionOutcome_Outcome_Failure_ActionError_NEW_RECEIPT_VALIDATION_ERROR           ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 14
	ExecutionOutcome_Outcome_Failure_ActionError_ONLY_IMPLICIT_ACCOUNT_CREATION_ALLOWED ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 15
	ExecutionOutcome_Outcome_Failure_ActionError_DELETE_ACCOUNT_WITH_LARGE_STATE        ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind = 16
)

// Enum value maps for ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind.
var (
	ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "ACCOUNT_ALREADY_EXISTS",
		2:  "ACCOUNT_DOES_NOT_EXIST",
		3:  "CREATE_ACCOUNT_ONLY_BY_REGISTRAR",
		4:  "CREATE_ACCOUNT_NOT_ALLOWED",
		5:  "ACTOR_NO_PERMISSION",
		6:  "DELETE_KEY_DOES_NOT_EXIST",
		7:  "ADD_KEY_ALREADY_EXISTS",
		8:  "DELETE_ACCOUNT_STAKING",
		9:  "LACK_BALANCE_FOR_STATE",
		10: "TRIES_TO_UNSTAKE",
		11: "TRIES_TO_STAKE",
		12: "INSUFFICIENT_STAKE",
		13: "FUNCTION_CALL_ERROR",
		14: "NEW_RECEIPT_VALIDATION_ERROR",
		15: "ONLY_IMPLICIT_ACCOUNT_CREATION_ALLOWED",
		16: "DELETE_ACCOUNT_WITH_LARGE_STATE",
	}
	ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind_value = map[string]int32{
		"UNKNOWN":                                0,
		"ACCOUNT_ALREADY_EXISTS":                 1,
		"ACCOUNT_DOES_NOT_EXIST":                 2,
		"CREATE_ACCOUNT_ONLY_BY_REGISTRAR":       3,
		"CREATE_ACCOUNT_NOT_ALLOWED":             4,
		"ACTOR_NO_PERMISSION":                    5,
		"DELETE_KEY_DOES_NOT_EXIST":              6,
		"ADD_KEY_ALREADY_EXISTS":                 7,
		"DELETE_ACCOUNT_STAKING":                 8,
		"LACK_BALANCE_FOR_STATE":                 9,
		"TRIES_TO_UNSTAKE":                       10,
		"TRIES_TO_STAKE":                         11,
		"INSUFFICIENT_STAKE":                     12,
		"FUNCTION_CALL_ERROR":                    13,
		"NEW_RECEIPT_VALIDATION_ERROR":           14,
		"ONLY_IMPLICIT_ACCOUNT_CREATION_ALLOWED": 15,
		"DELETE_ACCOUNT_WITH_LARGE_STATE":        16,
	}
)

func (x ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) Enum() *ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind {
	p := new(ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind)
	*p = x
	return p
}

func (x ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) Descriptor() protoreflect.EnumDescriptor {
	return file_near_proto_enumTypes[1].Descriptor()
}

func (ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) Type() protoreflect.EnumType {
	return &file_near_proto_enumTypes[1]
}

func (x ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind.Descriptor instead.
func (ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind) EnumDescriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 1, 0, 0}
}

type ExecutionOutcome_MerklePath_Direction int32

const (
	ExecutionOutcome_MerklePath_INVALID ExecutionOutcome_MerklePath_Direction = 0
	ExecutionOutcome_MerklePath_LEFT    ExecutionOutcome_MerklePath_Direction = 1
	ExecutionOutcome_MerklePath_RIGHT   ExecutionOutcome_MerklePath_Direction = 2
)

// Enum value maps for ExecutionOutcome_MerklePath_Direction.
var (
	ExecutionOutcome_MerklePath_Direction_name = map[int32]string{
		0: "INVALID",
		1: "LEFT",
		2: "RIGHT",
	}
	ExecutionOutcome_MerklePath_Direction_value = map[string]int32{
		"INVALID": 0,
		"LEFT":    1,
		"RIGHT":   2,
	}
)

func (x ExecutionOutcome_MerklePath_Direction) Enum() *ExecutionOutcome_MerklePath_Direction {
	p := new(ExecutionOutcome_MerklePath_Direction)
	*p = x
	return p
}

func (x ExecutionOutcome_MerklePath_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionOutcome_MerklePath_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_near_proto_enumTypes[2].Descriptor()
}

func (ExecutionOutcome_MerklePath_Direction) Type() protoreflect.EnumType {
	return &file_near_proto_enumTypes[2]
}

func (x ExecutionOutcome_MerklePath_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionOutcome_MerklePath_Direction.Descriptor instead.
func (ExecutionOutcome_MerklePath_Direction) EnumDescriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 1, 0}
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Author string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Header *Block_BlockHeader     `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Chunks []*Block_Chunk         `protobuf:"bytes,4,rep,name=chunks,proto3" json:"chunks,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Block) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Block) GetHeader() *Block_BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetChunks() []*Block_Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	SignerId   string                 `protobuf:"bytes,2,opt,name=signer_id,json=signerId,proto3" json:"signer_id,omitempty"`
	PublicKey  string                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Nonce      uint64                 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ReceiverId string                 `protobuf:"bytes,5,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Hash       string                 `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	Actions    []*Action              `protobuf:"bytes,7,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Transaction) GetSignerId() string {
	if x != nil {
		return x.SignerId
	}
	return ""
}

func (x *Transaction) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *Transaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Transaction) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	PredecessorId string                 `protobuf:"bytes,2,opt,name=predecessor_id,json=predecessorId,proto3" json:"predecessor_id,omitempty"`
	ReceiverId    string                 `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiptId     string                 `protobuf:"bytes,4,opt,name=receipt_id,json=receiptId,proto3" json:"receipt_id,omitempty"`
	// Types that are assignable to Receipt:
	//	*Receipt_ActionReceipt_
	//	*Receipt_DataReceipt_
	Receipt isReceipt_Receipt `protobuf_oneof:"receipt"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{2}
}

func (x *Receipt) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Receipt) GetPredecessorId() string {
	if x != nil {
		return x.PredecessorId
	}
	return ""
}

func (x *Receipt) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *Receipt) GetReceiptId() string {
	if x != nil {
		return x.ReceiptId
	}
	return ""
}

func (m *Receipt) GetReceipt() isReceipt_Receipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (x *Receipt) GetActionReceipt() *Receipt_ActionReceipt {
	if x, ok := x.GetReceipt().(*Receipt_ActionReceipt_); ok {
		return x.ActionReceipt
	}
	return nil
}

func (x *Receipt) GetDataReceipt() *Receipt_DataReceipt {
	if x, ok := x.GetReceipt().(*Receipt_DataReceipt_); ok {
		return x.DataReceipt
	}
	return nil
}

type isReceipt_Receipt interface {
	isReceipt_Receipt()
}

type Receipt_ActionReceipt_ struct {
	ActionReceipt *Receipt_ActionReceipt `protobuf:"bytes,5,opt,name=action_receipt,json=actionReceipt,proto3,oneof"`
}

type Receipt_DataReceipt_ struct {
	DataReceipt *Receipt_DataReceipt `protobuf:"bytes,6,opt,name=data_receipt,json=dataReceipt,proto3,oneof"`
}

func (*Receipt_ActionReceipt_) isReceipt_Receipt() {}

func (*Receipt_DataReceipt_) isReceipt_Receipt() {}

type ExecutionOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        *timestamppb.Timestamp         `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Id        string                         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	BlockHash string                         `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Outcome   *ExecutionOutcome_Outcome      `protobuf:"bytes,4,opt,name=outcome,proto3" json:"outcome,omitempty"`
	Proof     []*ExecutionOutcome_MerklePath `protobuf:"bytes,5,rep,name=proof,proto3" json:"proof,omitempty"`
}

func (x *ExecutionOutcome) Reset() {
	*x = ExecutionOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome) ProtoMessage() {}

func (x *ExecutionOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutionOutcome) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ExecutionOutcome) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecutionOutcome) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *ExecutionOutcome) GetOutcome() *ExecutionOutcome_Outcome {
	if x != nil {
		return x.Outcome
	}
	return nil
}

func (x *ExecutionOutcome) GetProof() []*ExecutionOutcome_MerklePath {
	if x != nil {
		return x.Proof
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*Action_CreateAccount_
	//	*Action_DeployContract_
	//	*Action_FunctionCall_
	//	*Action_Transfer_
	//	*Action_Stake_
	//	*Action_AddKey_
	//	*Action_DeleteKey_
	//	*Action_DeleteAccount_
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4}
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetCreateAccount() *Action_CreateAccount {
	if x, ok := x.GetAction().(*Action_CreateAccount_); ok {
		return x.CreateAccount
	}
	return nil
}

func (x *Action) GetDeployContract() *Action_DeployContract {
	if x, ok := x.GetAction().(*Action_DeployContract_); ok {
		return x.DeployContract
	}
	return nil
}

func (x *Action) GetFunctionCall() *Action_FunctionCall {
	if x, ok := x.GetAction().(*Action_FunctionCall_); ok {
		return x.FunctionCall
	}
	return nil
}

func (x *Action) GetTransfer() *Action_Transfer {
	if x, ok := x.GetAction().(*Action_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

func (x *Action) GetStake() *Action_Stake {
	if x, ok := x.GetAction().(*Action_Stake_); ok {
		return x.Stake
	}
	return nil
}

func (x *Action) GetAddKey() *Action_AddKey {
	if x, ok := x.GetAction().(*Action_AddKey_); ok {
		return x.AddKey
	}
	return nil
}

func (x *Action) GetDeleteKey() *Action_DeleteKey {
	if x, ok := x.GetAction().(*Action_DeleteKey_); ok {
		return x.DeleteKey
	}
	return nil
}

func (x *Action) GetDeleteAccount() *Action_DeleteAccount {
	if x, ok := x.GetAction().(*Action_DeleteAccount_); ok {
		return x.DeleteAccount
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_CreateAccount_ struct {
	CreateAccount *Action_CreateAccount `protobuf:"bytes,1,opt,name=create_account,json=createAccount,proto3,oneof"`
}

type Action_DeployContract_ struct {
	DeployContract *Action_DeployContract `protobuf:"bytes,2,opt,name=deploy_contract,json=deployContract,proto3,oneof"`
}

type Action_FunctionCall_ struct {
	FunctionCall *Action_FunctionCall `protobuf:"bytes,3,opt,name=function_call,json=functionCall,proto3,oneof"`
}

type Action_Transfer_ struct {
	Transfer *Action_Transfer `protobuf:"bytes,4,opt,name=transfer,proto3,oneof"`
}

type Action_Stake_ struct {
	Stake *Action_Stake `protobuf:"bytes,5,opt,name=stake,proto3,oneof"`
}

type Action_AddKey_ struct {
	AddKey *Action_AddKey `protobuf:"bytes,6,opt,name=add_key,json=addKey,proto3,oneof"`
}

type Action_DeleteKey_ struct {
	DeleteKey *Action_DeleteKey `protobuf:"bytes,7,opt,name=delete_key,json=deleteKey,proto3,oneof"`
}

type Action_DeleteAccount_ struct {
	DeleteAccount *Action_DeleteAccount `protobuf:"bytes,8,opt,name=delete_account,json=deleteAccount,proto3,oneof"`
}

func (*Action_CreateAccount_) isAction_Action() {}

func (*Action_DeployContract_) isAction_Action() {}

func (*Action_FunctionCall_) isAction_Action() {}

func (*Action_Transfer_) isAction_Action() {}

func (*Action_Stake_) isAction_Action() {}

func (*Action_AddKey_) isAction_Action() {}

func (*Action_DeleteKey_) isAction_Action() {}

func (*Action_DeleteAccount_) isAction_Action() {}

type AccessKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Types that are assignable to Permission:
	//	*AccessKey_FullAccess
	//	*AccessKey_FunctionCall
	Permission isAccessKey_Permission `protobuf_oneof:"permission"`
}

func (x *AccessKey) Reset() {
	*x = AccessKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey) ProtoMessage() {}

func (x *AccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey.ProtoReflect.Descriptor instead.
func (*AccessKey) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{5}
}

func (x *AccessKey) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (m *AccessKey) GetPermission() isAccessKey_Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

func (x *AccessKey) GetFullAccess() *AccessKey_FullAccessPermission {
	if x, ok := x.GetPermission().(*AccessKey_FullAccess); ok {
		return x.FullAccess
	}
	return nil
}

func (x *AccessKey) GetFunctionCall() *AccessKey_FunctionCallPermission {
	if x, ok := x.GetPermission().(*AccessKey_FunctionCall); ok {
		return x.FunctionCall
	}
	return nil
}

type isAccessKey_Permission interface {
	isAccessKey_Permission()
}

type AccessKey_FullAccess struct {
	FullAccess *AccessKey_FullAccessPermission `protobuf:"bytes,2,opt,name=full_access,json=fullAccess,proto3,oneof"`
}

type AccessKey_FunctionCall struct {
	FunctionCall *AccessKey_FunctionCallPermission `protobuf:"bytes,3,opt,name=function_call,json=functionCall,proto3,oneof"`
}

func (*AccessKey_FullAccess) isAccessKey_Permission() {}

func (*AccessKey_FunctionCall) isAccessKey_Permission() {}

type Block_BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height                uint64                                `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	PrevHeight            *uint64                               `protobuf:"varint,2,opt,name=prev_height,json=prevHeight,proto3,oneof" json:"prev_height,omitempty"`
	EpochId               string                                `protobuf:"bytes,3,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	NextEpochId           string                                `protobuf:"bytes,4,opt,name=next_epoch_id,json=nextEpochId,proto3" json:"next_epoch_id,omitempty"`
	Hash                  string                                `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash              string                                `protobuf:"bytes,6,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	PrevStateRoot         string                                `protobuf:"bytes,7,opt,name=prev_state_root,json=prevStateRoot,proto3" json:"prev_state_root,omitempty"`
	ChunkReceiptsRoot     string                                `protobuf:"bytes,8,opt,name=chunk_receipts_root,json=chunkReceiptsRoot,proto3" json:"chunk_receipts_root,omitempty"`
	ChunkHeadersRoot      string                                `protobuf:"bytes,9,opt,name=chunk_headers_root,json=chunkHeadersRoot,proto3" json:"chunk_headers_root,omitempty"`
	ChunkTxRoot           string                                `protobuf:"bytes,10,opt,name=chunk_tx_root,json=chunkTxRoot,proto3" json:"chunk_tx_root,omitempty"`
	OutcomeRoot           string                                `protobuf:"bytes,11,opt,name=outcome_root,json=outcomeRoot,proto3" json:"outcome_root,omitempty"`
	ChunksIncluded        uint64                                `protobuf:"varint,12,opt,name=chunks_included,json=chunksIncluded,proto3" json:"chunks_included,omitempty"`
	ChallengesRoot        string                                `protobuf:"bytes,13,opt,name=challenges_root,json=challengesRoot,proto3" json:"challenges_root,omitempty"`
	Timestamp             uint64                                `protobuf:"varint,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampNanosec      uint64                                `protobuf:"varint,15,opt,name=timestamp_nanosec,json=timestampNanosec,proto3" json:"timestamp_nanosec,omitempty"`
	RandomValue           string                                `protobuf:"bytes,16,opt,name=random_value,json=randomValue,proto3" json:"random_value,omitempty"`
	ValidatorProposals    []*Block_ValidatorStake               `protobuf:"bytes,17,rep,name=validator_proposals,json=validatorProposals,proto3" json:"validator_proposals,omitempty"`
	ChunkMask             []bool                                `protobuf:"varint,18,rep,packed,name=chunk_mask,json=chunkMask,proto3" json:"chunk_mask,omitempty"`
	GasPrice              []byte                                `protobuf:"bytes,19,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"` // uint128
	BlockOrdinal          *uint64                               `protobuf:"varint,20,opt,name=block_ordinal,json=blockOrdinal,proto3,oneof" json:"block_ordinal,omitempty"`
	TotalSupply           []byte                                `protobuf:"bytes,21,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"` // uint128
	ChallengesResult      []*Block_BlockHeader_SlashedValidator `protobuf:"bytes,22,rep,name=challenges_result,json=challengesResult,proto3" json:"challenges_result,omitempty"`
	LastFinalBlock        string                                `protobuf:"bytes,23,opt,name=last_final_block,json=lastFinalBlock,proto3" json:"last_final_block,omitempty"`
	LastDsFinalBlock      string                                `protobuf:"bytes,24,opt,name=last_ds_final_block,json=lastDsFinalBlock,proto3" json:"last_ds_final_block,omitempty"`
	NextBpHash            string                                `protobuf:"bytes,25,opt,name=next_bp_hash,json=nextBpHash,proto3" json:"next_bp_hash,omitempty"`
	BlockMerkleRoot       string                                `protobuf:"bytes,26,opt,name=block_merkle_root,json=blockMerkleRoot,proto3" json:"block_merkle_root,omitempty"`
	EpochSyncDataHash     *string                               `protobuf:"bytes,27,opt,name=epoch_sync_data_hash,json=epochSyncDataHash,proto3,oneof" json:"epoch_sync_data_hash,omitempty"`
	Approvals             []string                              `protobuf:"bytes,28,rep,name=approvals,proto3" json:"approvals,omitempty"`
	Signature             string                                `protobuf:"bytes,29,opt,name=signature,proto3" json:"signature,omitempty"`
	LatestProtocolVersion uint32                                `protobuf:"varint,30,opt,name=latest_protocol_version,json=latestProtocolVersion,proto3" json:"latest_protocol_version,omitempty"`
}

func (x *Block_BlockHeader) Reset() {
	*x = Block_BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_BlockHeader) ProtoMessage() {}

func (x *Block_BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_BlockHeader.ProtoReflect.Descriptor instead.
func (*Block_BlockHeader) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Block_BlockHeader) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block_BlockHeader) GetPrevHeight() uint64 {
	if x != nil && x.PrevHeight != nil {
		return *x.PrevHeight
	}
	return 0
}

func (x *Block_BlockHeader) GetEpochId() string {
	if x != nil {
		return x.EpochId
	}
	return ""
}

func (x *Block_BlockHeader) GetNextEpochId() string {
	if x != nil {
		return x.NextEpochId
	}
	return ""
}

func (x *Block_BlockHeader) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Block_BlockHeader) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *Block_BlockHeader) GetPrevStateRoot() string {
	if x != nil {
		return x.PrevStateRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetChunkReceiptsRoot() string {
	if x != nil {
		return x.ChunkReceiptsRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetChunkHeadersRoot() string {
	if x != nil {
		return x.ChunkHeadersRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetChunkTxRoot() string {
	if x != nil {
		return x.ChunkTxRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetOutcomeRoot() string {
	if x != nil {
		return x.OutcomeRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetChunksIncluded() uint64 {
	if x != nil {
		return x.ChunksIncluded
	}
	return 0
}

func (x *Block_BlockHeader) GetChallengesRoot() string {
	if x != nil {
		return x.ChallengesRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block_BlockHeader) GetTimestampNanosec() uint64 {
	if x != nil {
		return x.TimestampNanosec
	}
	return 0
}

func (x *Block_BlockHeader) GetRandomValue() string {
	if x != nil {
		return x.RandomValue
	}
	return ""
}

func (x *Block_BlockHeader) GetValidatorProposals() []*Block_ValidatorStake {
	if x != nil {
		return x.ValidatorProposals
	}
	return nil
}

func (x *Block_BlockHeader) GetChunkMask() []bool {
	if x != nil {
		return x.ChunkMask
	}
	return nil
}

func (x *Block_BlockHeader) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *Block_BlockHeader) GetBlockOrdinal() uint64 {
	if x != nil && x.BlockOrdinal != nil {
		return *x.BlockOrdinal
	}
	return 0
}

func (x *Block_BlockHeader) GetTotalSupply() []byte {
	if x != nil {
		return x.TotalSupply
	}
	return nil
}

func (x *Block_BlockHeader) GetChallengesResult() []*Block_BlockHeader_SlashedValidator {
	if x != nil {
		return x.ChallengesResult
	}
	return nil
}

func (x *Block_BlockHeader) GetLastFinalBlock() string {
	if x != nil {
		return x.LastFinalBlock
	}
	return ""
}

func (x *Block_BlockHeader) GetLastDsFinalBlock() string {
	if x != nil {
		return x.LastDsFinalBlock
	}
	return ""
}

func (x *Block_BlockHeader) GetNextBpHash() string {
	if x != nil {
		return x.NextBpHash
	}
	return ""
}

func (x *Block_BlockHeader) GetBlockMerkleRoot() string {
	if x != nil {
		return x.BlockMerkleRoot
	}
	return ""
}

func (x *Block_BlockHeader) GetEpochSyncDataHash() string {
	if x != nil && x.EpochSyncDataHash != nil {
		return *x.EpochSyncDataHash
	}
	return ""
}

func (x *Block_BlockHeader) GetApprovals() []string {
	if x != nil {
		return x.Approvals
	}
	return nil
}

func (x *Block_BlockHeader) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Block_BlockHeader) GetLatestProtocolVersion() uint32 {
	if x != nil {
		return x.LatestProtocolVersion
	}
	return 0
}

type Block_Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkHash            string                  `protobuf:"bytes,1,opt,name=chunk_hash,json=chunkHash,proto3" json:"chunk_hash,omitempty"`
	PrevBlockHash        string                  `protobuf:"bytes,2,opt,name=prev_block_hash,json=prevBlockHash,proto3" json:"prev_block_hash,omitempty"`
	OutcomeRoot          string                  `protobuf:"bytes,3,opt,name=outcome_root,json=outcomeRoot,proto3" json:"outcome_root,omitempty"`
	PrevStateRoot        string                  `protobuf:"bytes,4,opt,name=prev_state_root,json=prevStateRoot,proto3" json:"prev_state_root,omitempty"`
	EncodedMerkleRoot    string                  `protobuf:"bytes,5,opt,name=encoded_merkle_root,json=encodedMerkleRoot,proto3" json:"encoded_merkle_root,omitempty"`
	EncodedLength        uint64                  `protobuf:"varint,6,opt,name=encoded_length,json=encodedLength,proto3" json:"encoded_length,omitempty"`
	HeightCreated        uint64                  `protobuf:"varint,7,opt,name=height_created,json=heightCreated,proto3" json:"height_created,omitempty"`
	HeightIncluded       uint64                  `protobuf:"varint,8,opt,name=height_included,json=heightIncluded,proto3" json:"height_included,omitempty"`
	ShardId              uint64                  `protobuf:"varint,9,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	GasUsed              uint64                  `protobuf:"varint,10,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	GasLimit             uint64                  `protobuf:"varint,11,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	BalanceBurnt         []byte                  `protobuf:"bytes,12,opt,name=balance_burnt,json=balanceBurnt,proto3" json:"balance_burnt,omitempty"` // uint128
	OutgoingReceiptsRoot string                  `protobuf:"bytes,13,opt,name=outgoing_receipts_root,json=outgoingReceiptsRoot,proto3" json:"outgoing_receipts_root,omitempty"`
	TxRoot               string                  `protobuf:"bytes,14,opt,name=tx_root,json=txRoot,proto3" json:"tx_root,omitempty"`
	ValidatorProposals   []*Block_ValidatorStake `protobuf:"bytes,16,rep,name=validator_proposals,json=validatorProposals,proto3" json:"validator_proposals,omitempty"`
	Signature            string                  `protobuf:"bytes,17,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Block_Chunk) Reset() {
	*x = Block_Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Chunk) ProtoMessage() {}

func (x *Block_Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Chunk.ProtoReflect.Descriptor instead.
func (*Block_Chunk) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Block_Chunk) GetChunkHash() string {
	if x != nil {
		return x.ChunkHash
	}
	return ""
}

func (x *Block_Chunk) GetPrevBlockHash() string {
	if x != nil {
		return x.PrevBlockHash
	}
	return ""
}

func (x *Block_Chunk) GetOutcomeRoot() string {
	if x != nil {
		return x.OutcomeRoot
	}
	return ""
}

func (x *Block_Chunk) GetPrevStateRoot() string {
	if x != nil {
		return x.PrevStateRoot
	}
	return ""
}

func (x *Block_Chunk) GetEncodedMerkleRoot() string {
	if x != nil {
		return x.EncodedMerkleRoot
	}
	return ""
}

func (x *Block_Chunk) GetEncodedLength() uint64 {
	if x != nil {
		return x.EncodedLength
	}
	return 0
}

func (x *Block_Chunk) GetHeightCreated() uint64 {
	if x != nil {
		return x.HeightCreated
	}
	return 0
}

func (x *Block_Chunk) GetHeightIncluded() uint64 {
	if x != nil {
		return x.HeightIncluded
	}
	return 0
}

func (x *Block_Chunk) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *Block_Chunk) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Block_Chunk) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Block_Chunk) GetBalanceBurnt() []byte {
	if x != nil {
		return x.BalanceBurnt
	}
	return nil
}

func (x *Block_Chunk) GetOutgoingReceiptsRoot() string {
	if x != nil {
		return x.OutgoingReceiptsRoot
	}
	return ""
}

func (x *Block_Chunk) GetTxRoot() string {
	if x != nil {
		return x.TxRoot
	}
	return ""
}

func (x *Block_Chunk) GetValidatorProposals() []*Block_ValidatorStake {
	if x != nil {
		return x.ValidatorProposals
	}
	return nil
}

func (x *Block_Chunk) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type Block_ValidatorStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Stake     []byte `protobuf:"bytes,3,opt,name=stake,proto3" json:"stake,omitempty"` // uint128
}

func (x *Block_ValidatorStake) Reset() {
	*x = Block_ValidatorStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_ValidatorStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_ValidatorStake) ProtoMessage() {}

func (x *Block_ValidatorStake) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_ValidatorStake.ProtoReflect.Descriptor instead.
func (*Block_ValidatorStake) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Block_ValidatorStake) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Block_ValidatorStake) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Block_ValidatorStake) GetStake() []byte {
	if x != nil {
		return x.Stake
	}
	return nil
}

type Block_BlockHeader_SlashedValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	IsDoubleSign bool   `protobuf:"varint,2,opt,name=is_double_sign,json=isDoubleSign,proto3" json:"is_double_sign,omitempty"`
}

func (x *Block_BlockHeader_SlashedValidator) Reset() {
	*x = Block_BlockHeader_SlashedValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block_BlockHeader_SlashedValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_BlockHeader_SlashedValidator) ProtoMessage() {}

func (x *Block_BlockHeader_SlashedValidator) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_BlockHeader_SlashedValidator.ProtoReflect.Descriptor instead.
func (*Block_BlockHeader_SlashedValidator) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Block_BlockHeader_SlashedValidator) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Block_BlockHeader_SlashedValidator) GetIsDoubleSign() bool {
	if x != nil {
		return x.IsDoubleSign
	}
	return false
}

type Receipt_ActionReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignerId            string                                `protobuf:"bytes,1,opt,name=signer_id,json=signerId,proto3" json:"signer_id,omitempty"`
	SignerPublicKey     string                                `protobuf:"bytes,2,opt,name=signer_public_key,json=signerPublicKey,proto3" json:"signer_public_key,omitempty"`
	GasPrice            []byte                                `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"` // uint128
	OutputDataReceivers []*Receipt_ActionReceipt_DataReceiver `protobuf:"bytes,4,rep,name=output_data_receivers,json=outputDataReceivers,proto3" json:"output_data_receivers,omitempty"`
	InputDataIds        []string                              `protobuf:"bytes,5,rep,name=input_data_ids,json=inputDataIds,proto3" json:"input_data_ids,omitempty"`
	Actions             []*Action                             `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Receipt_ActionReceipt) Reset() {
	*x = Receipt_ActionReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt_ActionReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt_ActionReceipt) ProtoMessage() {}

func (x *Receipt_ActionReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt_ActionReceipt.ProtoReflect.Descriptor instead.
func (*Receipt_ActionReceipt) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Receipt_ActionReceipt) GetSignerId() string {
	if x != nil {
		return x.SignerId
	}
	return ""
}

func (x *Receipt_ActionReceipt) GetSignerPublicKey() string {
	if x != nil {
		return x.SignerPublicKey
	}
	return ""
}

func (x *Receipt_ActionReceipt) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *Receipt_ActionReceipt) GetOutputDataReceivers() []*Receipt_ActionReceipt_DataReceiver {
	if x != nil {
		return x.OutputDataReceivers
	}
	return nil
}

func (x *Receipt_ActionReceipt) GetInputDataIds() []string {
	if x != nil {
		return x.InputDataIds
	}
	return nil
}

func (x *Receipt_ActionReceipt) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Receipt_DataReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId string `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *Receipt_DataReceipt) Reset() {
	*x = Receipt_DataReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt_DataReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt_DataReceipt) ProtoMessage() {}

func (x *Receipt_DataReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt_DataReceipt.ProtoReflect.Descriptor instead.
func (*Receipt_DataReceipt) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Receipt_DataReceipt) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *Receipt_DataReceipt) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Receipt_ActionReceipt_DataReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId     string `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	ReceiverId string `protobuf:"bytes,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
}

func (x *Receipt_ActionReceipt_DataReceiver) Reset() {
	*x = Receipt_ActionReceipt_DataReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt_ActionReceipt_DataReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt_ActionReceipt_DataReceiver) ProtoMessage() {}

func (x *Receipt_ActionReceipt_DataReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt_ActionReceipt_DataReceiver.ProtoReflect.Descriptor instead.
func (*Receipt_ActionReceipt_DataReceiver) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *Receipt_ActionReceipt_DataReceiver) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *Receipt_ActionReceipt_DataReceiver) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

type ExecutionOutcome_Outcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutorId string `protobuf:"bytes,1,opt,name=executor_id,json=executorId,proto3" json:"executor_id,omitempty"`
	// Types that are assignable to Status:
	//	*ExecutionOutcome_Outcome_Unknown_
	//	*ExecutionOutcome_Outcome_Failure_
	//	*ExecutionOutcome_Outcome_SuccessValue_
	//	*ExecutionOutcome_Outcome_SuccessReceiptId_
	Status      isExecutionOutcome_Outcome_Status `protobuf_oneof:"status"`
	Logs        []string                          `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
	ReceiptIds  []string                          `protobuf:"bytes,7,rep,name=receipt_ids,json=receiptIds,proto3" json:"receipt_ids,omitempty"`
	GasBurnt    []byte                            `protobuf:"bytes,8,opt,name=gas_burnt,json=gasBurnt,proto3" json:"gas_burnt,omitempty"`          // uint128
	TokensBurnt []byte                            `protobuf:"bytes,9,opt,name=tokens_burnt,json=tokensBurnt,proto3" json:"tokens_burnt,omitempty"` // uint128
}

func (x *ExecutionOutcome_Outcome) Reset() {
	*x = ExecutionOutcome_Outcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ExecutionOutcome_Outcome) GetExecutorId() string {
	if x != nil {
		return x.ExecutorId
	}
	return ""
}

func (m *ExecutionOutcome_Outcome) GetStatus() isExecutionOutcome_Outcome_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetUnknown() *ExecutionOutcome_Outcome_Unknown {
	if x, ok := x.GetStatus().(*ExecutionOutcome_Outcome_Unknown_); ok {
		return x.Unknown
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetFailure() *ExecutionOutcome_Outcome_Failure {
	if x, ok := x.GetStatus().(*ExecutionOutcome_Outcome_Failure_); ok {
		return x.Failure
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetSuccessValue() *ExecutionOutcome_Outcome_SuccessValue {
	if x, ok := x.GetStatus().(*ExecutionOutcome_Outcome_SuccessValue_); ok {
		return x.SuccessValue
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetSuccessReceiptId() *ExecutionOutcome_Outcome_SuccessReceiptId {
	if x, ok := x.GetStatus().(*ExecutionOutcome_Outcome_SuccessReceiptId_); ok {
		return x.SuccessReceiptId
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetReceiptIds() []string {
	if x != nil {
		return x.ReceiptIds
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetGasBurnt() []byte {
	if x != nil {
		return x.GasBurnt
	}
	return nil
}

func (x *ExecutionOutcome_Outcome) GetTokensBurnt() []byte {
	if x != nil {
		return x.TokensBurnt
	}
	return nil
}

type isExecutionOutcome_Outcome_Status interface {
	isExecutionOutcome_Outcome_Status()
}

type ExecutionOutcome_Outcome_Unknown_ struct {
	Unknown *ExecutionOutcome_Outcome_Unknown `protobuf:"bytes,2,opt,name=unknown,proto3,oneof"`
}

type ExecutionOutcome_Outcome_Failure_ struct {
	Failure *ExecutionOutcome_Outcome_Failure `protobuf:"bytes,3,opt,name=failure,proto3,oneof"`
}

type ExecutionOutcome_Outcome_SuccessValue_ struct {
	SuccessValue *ExecutionOutcome_Outcome_SuccessValue `protobuf:"bytes,4,opt,name=success_value,json=successValue,proto3,oneof"`
}

type ExecutionOutcome_Outcome_SuccessReceiptId_ struct {
	SuccessReceiptId *ExecutionOutcome_Outcome_SuccessReceiptId `protobuf:"bytes,5,opt,name=success_receipt_id,json=successReceiptId,proto3,oneof"`
}

func (*ExecutionOutcome_Outcome_Unknown_) isExecutionOutcome_Outcome_Status() {}

func (*ExecutionOutcome_Outcome_Failure_) isExecutionOutcome_Outcome_Status() {}

func (*ExecutionOutcome_Outcome_SuccessValue_) isExecutionOutcome_Outcome_Status() {}

func (*ExecutionOutcome_Outcome_SuccessReceiptId_) isExecutionOutcome_Outcome_Status() {}

type ExecutionOutcome_MerklePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash      string                                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Direction ExecutionOutcome_MerklePath_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=near.ExecutionOutcome_MerklePath_Direction" json:"direction,omitempty"`
}

func (x *ExecutionOutcome_MerklePath) Reset() {
	*x = ExecutionOutcome_MerklePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_MerklePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_MerklePath) ProtoMessage() {}

func (x *ExecutionOutcome_MerklePath) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_MerklePath.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_MerklePath) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ExecutionOutcome_MerklePath) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ExecutionOutcome_MerklePath) GetDirection() ExecutionOutcome_MerklePath_Direction {
	if x != nil {
		return x.Direction
	}
	return ExecutionOutcome_MerklePath_INVALID
}

type ExecutionOutcome_Outcome_Unknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExecutionOutcome_Outcome_Unknown) Reset() {
	*x = ExecutionOutcome_Outcome_Unknown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome_Unknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome_Unknown) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome_Unknown) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_Unknown.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome_Unknown) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 0}
}

type ExecutionOutcome_Outcome_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Error:
	//	*ExecutionOutcome_Outcome_Failure_ActionError_
	//	*ExecutionOutcome_Outcome_Failure_InvalidTxError_
	Error isExecutionOutcome_Outcome_Failure_Error `protobuf_oneof:"error"`
}

func (x *ExecutionOutcome_Outcome_Failure) Reset() {
	*x = ExecutionOutcome_Outcome_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome_Failure) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_Failure.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome_Failure) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (m *ExecutionOutcome_Outcome_Failure) GetError() isExecutionOutcome_Outcome_Failure_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *ExecutionOutcome_Outcome_Failure) GetActionError() *ExecutionOutcome_Outcome_Failure_ActionError {
	if x, ok := x.GetError().(*ExecutionOutcome_Outcome_Failure_ActionError_); ok {
		return x.ActionError
	}
	return nil
}

func (x *ExecutionOutcome_Outcome_Failure) GetInvalidTxError() ExecutionOutcome_Outcome_Failure_InvalidTxError {
	if x, ok := x.GetError().(*ExecutionOutcome_Outcome_Failure_InvalidTxError_); ok {
		return x.InvalidTxError
	}
	return ExecutionOutcome_Outcome_Failure_UNKNOWN
}

type isExecutionOutcome_Outcome_Failure_Error interface {
	isExecutionOutcome_Outcome_Failure_Error()
}

type ExecutionOutcome_Outcome_Failure_ActionError_ struct {
	ActionError *ExecutionOutcome_Outcome_Failure_ActionError `protobuf:"bytes,1,opt,name=action_error,json=actionError,proto3,oneof"`
}

type ExecutionOutcome_Outcome_Failure_InvalidTxError_ struct {
	InvalidTxError ExecutionOutcome_Outcome_Failure_InvalidTxError `protobuf:"varint,2,opt,name=invalid_tx_error,json=invalidTxError,proto3,enum=near.ExecutionOutcome_Outcome_Failure_InvalidTxError,oneof"`
}

func (*ExecutionOutcome_Outcome_Failure_ActionError_) isExecutionOutcome_Outcome_Failure_Error() {}

func (*ExecutionOutcome_Outcome_Failure_InvalidTxError_) isExecutionOutcome_Outcome_Failure_Error() {}

type ExecutionOutcome_Outcome_SuccessValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExecutionOutcome_Outcome_SuccessValue) Reset() {
	*x = ExecutionOutcome_Outcome_SuccessValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome_SuccessValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome_SuccessValue) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome_SuccessValue) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_SuccessValue.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome_SuccessValue) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 2}
}

func (x *ExecutionOutcome_Outcome_SuccessValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ExecutionOutcome_Outcome_SuccessReceiptId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiptId string `protobuf:"bytes,1,opt,name=receipt_id,json=receiptId,proto3" json:"receipt_id,omitempty"`
}

func (x *ExecutionOutcome_Outcome_SuccessReceiptId) Reset() {
	*x = ExecutionOutcome_Outcome_SuccessReceiptId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome_SuccessReceiptId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome_SuccessReceiptId) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome_SuccessReceiptId) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_SuccessReceiptId.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome_SuccessReceiptId) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 3}
}

func (x *ExecutionOutcome_Outcome_SuccessReceiptId) GetReceiptId() string {
	if x != nil {
		return x.ReceiptId
	}
	return ""
}

type ExecutionOutcome_Outcome_Failure_ActionError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *uint64                                                      `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
	Kind  ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind `protobuf:"varint,2,opt,name=kind,proto3,enum=near.ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind" json:"kind,omitempty"`
}

func (x *ExecutionOutcome_Outcome_Failure_ActionError) Reset() {
	*x = ExecutionOutcome_Outcome_Failure_ActionError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutcome_Outcome_Failure_ActionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutcome_Outcome_Failure_ActionError) ProtoMessage() {}

func (x *ExecutionOutcome_Outcome_Failure_ActionError) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutcome_Outcome_Failure_ActionError.ProtoReflect.Descriptor instead.
func (*ExecutionOutcome_Outcome_Failure_ActionError) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{3, 0, 1, 0}
}

func (x *ExecutionOutcome_Outcome_Failure_ActionError) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *ExecutionOutcome_Outcome_Failure_ActionError) GetKind() ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind {
	if x != nil {
		return x.Kind
	}
	return ExecutionOutcome_Outcome_Failure_ActionError_UNKNOWN
}

type Action_CreateAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Action_CreateAccount) Reset() {
	*x = Action_CreateAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_CreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_CreateAccount) ProtoMessage() {}

func (x *Action_CreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_CreateAccount.ProtoReflect.Descriptor instead.
func (*Action_CreateAccount) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 0}
}

type Action_DeployContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Action_DeployContract) Reset() {
	*x = Action_DeployContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_DeployContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_DeployContract) ProtoMessage() {}

func (x *Action_DeployContract) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_DeployContract.ProtoReflect.Descriptor instead.
func (*Action_DeployContract) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Action_DeployContract) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Action_FunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName string `protobuf:"bytes,1,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Args       string `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	Gas        uint64 `protobuf:"varint,3,opt,name=gas,proto3" json:"gas,omitempty"`
	Deposit    []byte `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit,omitempty"` // uint128
}

func (x *Action_FunctionCall) Reset() {
	*x = Action_FunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_FunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_FunctionCall) ProtoMessage() {}

func (x *Action_FunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_FunctionCall.ProtoReflect.Descriptor instead.
func (*Action_FunctionCall) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Action_FunctionCall) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *Action_FunctionCall) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *Action_FunctionCall) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *Action_FunctionCall) GetDeposit() []byte {
	if x != nil {
		return x.Deposit
	}
	return nil
}

type Action_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deposit []byte `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit,omitempty"` // uint128
}

func (x *Action_Transfer) Reset() {
	*x = Action_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Transfer) ProtoMessage() {}

func (x *Action_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Transfer.ProtoReflect.Descriptor instead.
func (*Action_Transfer) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Action_Transfer) GetDeposit() []byte {
	if x != nil {
		return x.Deposit
	}
	return nil
}

type Action_Stake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stake     []byte `protobuf:"bytes,1,opt,name=stake,proto3" json:"stake,omitempty"` // uint128
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *Action_Stake) Reset() {
	*x = Action_Stake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Stake) ProtoMessage() {}

func (x *Action_Stake) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Stake.ProtoReflect.Descriptor instead.
func (*Action_Stake) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Action_Stake) GetStake() []byte {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *Action_Stake) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type Action_AddKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string     `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	AccessKey *AccessKey `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
}

func (x *Action_AddKey) Reset() {
	*x = Action_AddKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_AddKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_AddKey) ProtoMessage() {}

func (x *Action_AddKey) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_AddKey.ProtoReflect.Descriptor instead.
func (*Action_AddKey) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 5}
}

func (x *Action_AddKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Action_AddKey) GetAccessKey() *AccessKey {
	if x != nil {
		return x.AccessKey
	}
	return nil
}

type Action_DeleteKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *Action_DeleteKey) Reset() {
	*x = Action_DeleteKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_DeleteKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_DeleteKey) ProtoMessage() {}

func (x *Action_DeleteKey) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_DeleteKey.ProtoReflect.Descriptor instead.
func (*Action_DeleteKey) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 6}
}

func (x *Action_DeleteKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type Action_DeleteAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeneficiaryId string `protobuf:"bytes,1,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
}

func (x *Action_DeleteAccount) Reset() {
	*x = Action_DeleteAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_DeleteAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_DeleteAccount) ProtoMessage() {}

func (x *Action_DeleteAccount) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_DeleteAccount.ProtoReflect.Descriptor instead.
func (*Action_DeleteAccount) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{4, 7}
}

func (x *Action_DeleteAccount) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

type AccessKey_FullAccessPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccessKey_FullAccessPermission) Reset() {
	*x = AccessKey_FullAccessPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKey_FullAccessPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey_FullAccessPermission) ProtoMessage() {}

func (x *AccessKey_FullAccessPermission) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey_FullAccessPermission.ProtoReflect.Descriptor instead.
func (*AccessKey_FullAccessPermission) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{5, 0}
}

type AccessKey_FunctionCallPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowance   []byte   `protobuf:"bytes,1,opt,name=allowance,proto3,oneof" json:"allowance,omitempty"` // uint128
	ReceiverId  string   `protobuf:"bytes,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	MethodNames []string `protobuf:"bytes,3,rep,name=method_names,json=methodNames,proto3" json:"method_names,omitempty"`
}

func (x *AccessKey_FunctionCallPermission) Reset() {
	*x = AccessKey_FunctionCallPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_near_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessKey_FunctionCallPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey_FunctionCallPermission) ProtoMessage() {}

func (x *AccessKey_FunctionCallPermission) ProtoReflect() protoreflect.Message {
	mi := &file_near_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey_FunctionCallPermission.ProtoReflect.Descriptor instead.
func (*AccessKey_FunctionCallPermission) Descriptor() ([]byte, []int) {
	return file_near_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AccessKey_FunctionCallPermission) GetAllowance() []byte {
	if x != nil {
		return x.Allowance
	}
	return nil
}

func (x *AccessKey_FunctionCallPermission) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *AccessKey_FunctionCallPermission) GetMethodNames() []string {
	if x != nil {
		return x.MethodNames
	}
	return nil
}

var File_near_proto protoreflect.FileDescriptor

var file_near_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x65,
	0x61, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x11, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x2f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x1a, 0xda, 0x0a,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x72, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x54,
	0x78, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61,
	0x6e, 0x6f, 0x73, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x52, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x12, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x55,
	0x0a, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x61, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2e, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x2d, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x44, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x70, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x34, 0x0a, 0x14,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x11, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x1c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x36,
	0x0a, 0x17, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x57, 0x0a, 0x10, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x65,
	0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0xf2, 0x04, 0x0a, 0x05, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a,
	0x0e, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x72, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x75, 0x72, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x12, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a,
	0x64, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x61, 0x72,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xe5, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64,
	0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65,
	0x61, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x1a, 0xeb, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a,
	0x15, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e,
	0x65, 0x61, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x13, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64,
	0x73, 0x12, 0x26, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x48, 0x0a, 0x0c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x48, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a,
	0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x8d, 0x11, 0x0a, 0x10, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x65, 0x61, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x1a, 0x8d, 0x0e, 0x0a, 0x07,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x61, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x42, 0x0a, 0x07,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x52, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x73, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x42, 0x75, 0x72, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x75, 0x72, 0x6e, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x1a, 0xc0, 0x09, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x12, 0x57, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x61, 0x0a, 0x10, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x54, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x69,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x83, 0x05,
	0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0xf6, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59,
	0x5f, 0x42, 0x59, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x52, 0x10, 0x03, 0x12,
	0x1e, 0x0a, 0x1a, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x17, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x44, 0x44, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12,
	0x1a, 0x0a, 0x16, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x52, 0x49, 0x45, 0x53, 0x5f, 0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x10,
	0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54,
	0x41, 0x4b, 0x45, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49,
	0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x10, 0x0c, 0x12, 0x17, 0x0a,
	0x13, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x0d, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x45, 0x57, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x50, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0e, 0x12, 0x2a, 0x0a, 0x26, 0x4f, 0x4e, 0x4c, 0x59,
	0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x45, 0x44, 0x10, 0x0f, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x52, 0x47,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x10, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0xe9, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54,
	0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e,
	0x45, 0x52, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4e,
	0x4f, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x4e, 0x43, 0x45, 0x5f,
	0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x4e,
	0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x41, 0x4c, 0x41,
	0x4e, 0x43, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x09, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57,
	0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48,
	0x41, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x10, 0x0c, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0d,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x49, 0x5a, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x0e, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x24, 0x0a, 0x0c, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x31,
	0x0a, 0x10, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x9a, 0x01, 0x0a, 0x0a,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x49,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x09, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02, 0x22, 0xb9, 0x07, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65,
	0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x40, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x06, 0x61, 0x64, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x6f, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x1a, 0x24, 0x0a, 0x08, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x1a,
	0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x57, 0x0a,
	0x06, 0x41, 0x64, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x65, 0x61,
	0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x2a, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x1a, 0x36, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x02, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6e, 0x65, 0x61, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x2e, 0x46,
	0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x1a, 0x16, 0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x8d, 0x01, 0x0a, 0x16, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x61,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x6b, 0x6a, 0x69, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6e, 0x65,
	0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_near_proto_rawDescOnce sync.Once
	file_near_proto_rawDescData = file_near_proto_rawDesc
)

func file_near_proto_rawDescGZIP() []byte {
	file_near_proto_rawDescOnce.Do(func() {
		file_near_proto_rawDescData = protoimpl.X.CompressGZIP(file_near_proto_rawDescData)
	})
	return file_near_proto_rawDescData
}

var file_near_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_near_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_near_proto_goTypes = []interface{}{
	(ExecutionOutcome_Outcome_Failure_InvalidTxError)(0),              // 0: near.ExecutionOutcome.Outcome.Failure.InvalidTxError
	(ExecutionOutcome_Outcome_Failure_ActionError_ActionErrorKind)(0), // 1: near.ExecutionOutcome.Outcome.Failure.ActionError.ActionErrorKind
	(ExecutionOutcome_MerklePath_Direction)(0),                        // 2: near.ExecutionOutcome.MerklePath.Direction
	(*Block)(nil),                                        // 3: near.Block
	(*Transaction)(nil),                                  // 4: near.Transaction
	(*Receipt)(nil),                                      // 5: near.Receipt
	(*ExecutionOutcome)(nil),                             // 6: near.ExecutionOutcome
	(*Action)(nil),                                       // 7: near.Action
	(*AccessKey)(nil),                                    // 8: near.AccessKey
	(*Block_BlockHeader)(nil),                            // 9: near.Block.BlockHeader
	(*Block_Chunk)(nil),                                  // 10: near.Block.Chunk
	(*Block_ValidatorStake)(nil),                         // 11: near.Block.ValidatorStake
	(*Block_BlockHeader_SlashedValidator)(nil),           // 12: near.Block.BlockHeader.SlashedValidator
	(*Receipt_ActionReceipt)(nil),                        // 13: near.Receipt.ActionReceipt
	(*Receipt_DataReceipt)(nil),                          // 14: near.Receipt.DataReceipt
	(*Receipt_ActionReceipt_DataReceiver)(nil),           // 15: near.Receipt.ActionReceipt.DataReceiver
	(*ExecutionOutcome_Outcome)(nil),                     // 16: near.ExecutionOutcome.Outcome
	(*ExecutionOutcome_MerklePath)(nil),                  // 17: near.ExecutionOutcome.MerklePath
	(*ExecutionOutcome_Outcome_Unknown)(nil),             // 18: near.ExecutionOutcome.Outcome.Unknown
	(*ExecutionOutcome_Outcome_Failure)(nil),             // 19: near.ExecutionOutcome.Outcome.Failure
	(*ExecutionOutcome_Outcome_SuccessValue)(nil),        // 20: near.ExecutionOutcome.Outcome.SuccessValue
	(*ExecutionOutcome_Outcome_SuccessReceiptId)(nil),    // 21: near.ExecutionOutcome.Outcome.SuccessReceiptId
	(*ExecutionOutcome_Outcome_Failure_ActionError)(nil), // 22: near.ExecutionOutcome.Outcome.Failure.ActionError
	(*Action_CreateAccount)(nil),                         // 23: near.Action.CreateAccount
	(*Action_DeployContract)(nil),                        // 24: near.Action.DeployContract
	(*Action_FunctionCall)(nil),                          // 25: near.Action.FunctionCall
	(*Action_Transfer)(nil),                              // 26: near.Action.Transfer
	(*Action_Stake)(nil),                                 // 27: near.Action.Stake
	(*Action_AddKey)(nil),                                // 28: near.Action.AddKey
	(*Action_DeleteKey)(nil),                             // 29: near.Action.DeleteKey
	(*Action_DeleteAccount)(nil),                         // 30: near.Action.DeleteAccount
	(*AccessKey_FullAccessPermission)(nil),               // 31: near.AccessKey.FullAccessPermission
	(*AccessKey_FunctionCallPermission)(nil),             // 32: near.AccessKey.FunctionCallPermission
	(*timestamppb.Timestamp)(nil),                        // 33: google.protobuf.Timestamp
}
var file_near_proto_depIdxs = []int32{
	33, // 0: near.Block.ts:type_name -> google.protobuf.Timestamp
	9,  // 1: near.Block.header:type_name -> near.Block.BlockHeader
	10, // 2: near.Block.chunks:type_name -> near.Block.Chunk
	33, // 3: near.Transaction.ts:type_name -> google.protobuf.Timestamp
	7,  // 4: near.Transaction.actions:type_name -> near.Action
	33, // 5: near.Receipt.ts:type_name -> google.protobuf.Timestamp
	13, // 6: near.Receipt.action_receipt:type_name -> near.Receipt.ActionReceipt
	14, // 7: near.Receipt.data_receipt:type_name -> near.Receipt.DataReceipt
	33, // 8: near.ExecutionOutcome.ts:type_name -> google.protobuf.Timestamp
	16, // 9: near.ExecutionOutcome.outcome:type_name -> near.ExecutionOutcome.Outcome
	17, // 10: near.ExecutionOutcome.proof:type_name -> near.ExecutionOutcome.MerklePath
	23, // 11: near.Action.create_account:type_name -> near.Action.CreateAccount
	24, // 12: near.Action.deploy_contract:type_name -> near.Action.DeployContract
	25, // 13: near.Action.function_call:type_name -> near.Action.FunctionCall
	26, // 14: near.Action.transfer:type_name -> near.Action.Transfer
	27, // 15: near.Action.stake:type_name -> near.Action.Stake
	28, // 16: near.Action.add_key:type_name -> near.Action.AddKey
	29, // 17: near.Action.delete_key:type_name -> near.Action.DeleteKey
	30, // 18: near.Action.delete_account:type_name -> near.Action.DeleteAccount
	31, // 19: near.AccessKey.full_access:type_name -> near.AccessKey.FullAccessPermission
	32, // 20: near.AccessKey.function_call:type_name -> near.AccessKey.FunctionCallPermission
	11, // 21: near.Block.BlockHeader.validator_proposals:type_name -> near.Block.ValidatorStake
	12, // 22: near.Block.BlockHeader.challenges_result:type_name -> near.Block.BlockHeader.SlashedValidator
	11, // 23: near.Block.Chunk.validator_proposals:type_name -> near.Block.ValidatorStake
	15, // 24: near.Receipt.ActionReceipt.output_data_receivers:type_name -> near.Receipt.ActionReceipt.DataReceiver
	7,  // 25: near.Receipt.ActionReceipt.actions:type_name -> near.Action
	18, // 26: near.ExecutionOutcome.Outcome.unknown:type_name -> near.ExecutionOutcome.Outcome.Unknown
	19, // 27: near.ExecutionOutcome.Outcome.failure:type_name -> near.ExecutionOutcome.Outcome.Failure
	20, // 28: near.ExecutionOutcome.Outcome.success_value:type_name -> near.ExecutionOutcome.Outcome.SuccessValue
	21, // 29: near.ExecutionOutcome.Outcome.success_receipt_id:type_name -> near.ExecutionOutcome.Outcome.SuccessReceiptId
	2,  // 30: near.ExecutionOutcome.MerklePath.direction:type_name -> near.ExecutionOutcome.MerklePath.Direction
	22, // 31: near.ExecutionOutcome.Outcome.Failure.action_error:type_name -> near.ExecutionOutcome.Outcome.Failure.ActionError
	0,  // 32: near.ExecutionOutcome.Outcome.Failure.invalid_tx_error:type_name -> near.ExecutionOutcome.Outcome.Failure.InvalidTxError
	1,  // 33: near.ExecutionOutcome.Outcome.Failure.ActionError.kind:type_name -> near.ExecutionOutcome.Outcome.Failure.ActionError.ActionErrorKind
	8,  // 34: near.Action.AddKey.access_key:type_name -> near.AccessKey
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_near_proto_init() }
func file_near_proto_init() {
	if File_near_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_near_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_ValidatorStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block_BlockHeader_SlashedValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt_ActionReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt_DataReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt_ActionReceipt_DataReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_MerklePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome_Unknown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome_SuccessValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome_SuccessReceiptId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutcome_Outcome_Failure_ActionError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_CreateAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_DeployContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_FunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_Stake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_AddKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_DeleteKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action_DeleteAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKey_FullAccessPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_near_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessKey_FunctionCallPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_near_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Receipt_ActionReceipt_)(nil),
		(*Receipt_DataReceipt_)(nil),
	}
	file_near_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Action_CreateAccount_)(nil),
		(*Action_DeployContract_)(nil),
		(*Action_FunctionCall_)(nil),
		(*Action_Transfer_)(nil),
		(*Action_Stake_)(nil),
		(*Action_AddKey_)(nil),
		(*Action_DeleteKey_)(nil),
		(*Action_DeleteAccount_)(nil),
	}
	file_near_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AccessKey_FullAccess)(nil),
		(*AccessKey_FunctionCall)(nil),
	}
	file_near_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_near_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_near_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ExecutionOutcome_Outcome_Unknown_)(nil),
		(*ExecutionOutcome_Outcome_Failure_)(nil),
		(*ExecutionOutcome_Outcome_SuccessValue_)(nil),
		(*ExecutionOutcome_Outcome_SuccessReceiptId_)(nil),
	}
	file_near_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ExecutionOutcome_Outcome_Failure_ActionError_)(nil),
		(*ExecutionOutcome_Outcome_Failure_InvalidTxError_)(nil),
	}
	file_near_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_near_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_near_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_near_proto_goTypes,
		DependencyIndexes: file_near_proto_depIdxs,
		EnumInfos:         file_near_proto_enumTypes,
		MessageInfos:      file_near_proto_msgTypes,
	}.Build()
	File_near_proto = out.File
	file_near_proto_rawDesc = nil
	file_near_proto_goTypes = nil
	file_near_proto_depIdxs = nil
}
