syntax = "proto3";

import "google/protobuf/timestamp.proto";

package bitcoin;

option go_package = "blep.ai/data/connectors/source/bitcoin";


// https://pkg.go.dev/github.com/btcsuite/btcd@v0.21.0-beta/btcjson#GetBlockVerboseTxResult
message Block {
    google.protobuf.Timestamp ts        = 1;
    string merkle_root                  = 2;
    string bits                         = 3;
    string hash                         = 4;
    double difficulty                   = 5; 
    uint32 nonce                        = 6; 
    string previous_hash                = 7;
    string next_hash                    = 8;
    int32 version                       = 9;
    string version_hex                  = 10;
    int64 height                        = 11;
    int32 weight                        = 12;
    int32 size                          = 13;
    int32 stripped_size                 = 14;
    int64 confirmations                 = 15;
}

// https://pkg.go.dev/github.com/btcsuite/btcd@v0.21.0-beta/btcjson#TxRawResult
message Transaction {
    google.protobuf.Timestamp ts    = 1;
    string hex                      = 2;
    string txid                     = 3;
    string hash                     = 4;
    int32 size                      = 5;
    int32 vsize                     = 6;
    int32 weight                    = 7;
    uint32 version                  = 8;
    uint32 lock_time                = 9;
    string block_hash               = 10;
    uint64 confirmations            = 11;
    int64 blocktime                = 12;
    repeated Vin vin                = 13;
    repeated Vout vout              = 14;
}

// https://pkg.go.dev/github.com/btcsuite/btcd@v0.21.0-beta/btcjson#Vin
message Vin {
    string coinbase         = 1;
    string txid             = 2;
    uint32 vout             = 3;
    string asm              = 4;
    string hex              = 5;
    uint32 sequence         = 6;
    repeated string witness = 7;
}

// https://pkg.go.dev/github.com/btcsuite/btcd@v0.21.0-beta/btcjson#Vout
message Vout {
    double value                = 1;
    uint32 n                    = 2;
    string asm                  = 3;
    string hex                  = 4;
    int32 req_sigs              = 5;
    string type                 = 6;
    repeated string addresses   = 7;
}