// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cOKC.proto

package cOKC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Approval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block   uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx     uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx      []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	Owner   []byte                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Spender []byte                 `protobuf:"bytes,6,opt,name=spender,proto3" json:"spender,omitempty"`
	Value   []byte                 `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Approval) Reset() {
	*x = Approval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Approval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approval) ProtoMessage() {}

func (x *Approval) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approval.ProtoReflect.Descriptor instead.
func (*Approval) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{0}
}

func (x *Approval) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Approval) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Approval) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Approval) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *Approval) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Approval) GetSpender() []byte {
	if x != nil {
		return x.Spender
	}
	return nil
}

func (x *Approval) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MintClaimed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block        uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx          uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx           []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	User         []byte                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	RewardAmount []byte                 `protobuf:"bytes,6,opt,name=rewardAmount,proto3" json:"rewardAmount,omitempty"`
}

func (x *MintClaimed) Reset() {
	*x = MintClaimed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintClaimed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintClaimed) ProtoMessage() {}

func (x *MintClaimed) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintClaimed.ProtoReflect.Descriptor instead.
func (*MintClaimed) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{1}
}

func (x *MintClaimed) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *MintClaimed) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *MintClaimed) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *MintClaimed) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *MintClaimed) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MintClaimed) GetRewardAmount() []byte {
	if x != nil {
		return x.RewardAmount
	}
	return nil
}

type RankClaimed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx   uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx    []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	User  []byte                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Term  []byte                 `protobuf:"bytes,6,opt,name=term,proto3" json:"term,omitempty"`
	Rank  []byte                 `protobuf:"bytes,7,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *RankClaimed) Reset() {
	*x = RankClaimed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankClaimed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankClaimed) ProtoMessage() {}

func (x *RankClaimed) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankClaimed.ProtoReflect.Descriptor instead.
func (*RankClaimed) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{2}
}

func (x *RankClaimed) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *RankClaimed) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *RankClaimed) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *RankClaimed) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *RankClaimed) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RankClaimed) GetTerm() []byte {
	if x != nil {
		return x.Term
	}
	return nil
}

func (x *RankClaimed) GetRank() []byte {
	if x != nil {
		return x.Rank
	}
	return nil
}

type Staked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block  uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx    uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx     []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	User   []byte                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Amount []byte                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Term   []byte                 `protobuf:"bytes,7,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *Staked) Reset() {
	*x = Staked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staked) ProtoMessage() {}

func (x *Staked) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staked.ProtoReflect.Descriptor instead.
func (*Staked) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{3}
}

func (x *Staked) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Staked) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Staked) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Staked) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *Staked) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Staked) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Staked) GetTerm() []byte {
	if x != nil {
		return x.Term
	}
	return nil
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx   uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx    []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	From  []byte                 `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To    []byte                 `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
	Value []byte                 `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{4}
}

func (x *Transfer) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Transfer) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Transfer) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Transfer) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *Transfer) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transfer) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transfer) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Withdrawn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Block  uint64                 `protobuf:"varint,2,opt,name=block,proto3" json:"block,omitempty"`
	Idx    uint64                 `protobuf:"varint,3,opt,name=idx,proto3" json:"idx,omitempty"`
	Tx     []byte                 `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"` // tx hash
	User   []byte                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Amount []byte                 `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Reward []byte                 `protobuf:"bytes,7,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *Withdrawn) Reset() {
	*x = Withdrawn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cOKC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdrawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdrawn) ProtoMessage() {}

func (x *Withdrawn) ProtoReflect() protoreflect.Message {
	mi := &file_cOKC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdrawn.ProtoReflect.Descriptor instead.
func (*Withdrawn) Descriptor() ([]byte, []int) {
	return file_cOKC_proto_rawDescGZIP(), []int{5}
}

func (x *Withdrawn) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Withdrawn) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *Withdrawn) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Withdrawn) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *Withdrawn) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Withdrawn) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Withdrawn) GetReward() []byte {
	if x != nil {
		return x.Reward
	}
	return nil
}

var File_cOKC_proto protoreflect.FileDescriptor

var file_cOKC_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x4f, 0x4b, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x4f,
	0x4b, 0x43, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x69, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x0b, 0x4d,
	0x69, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xac, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb3, 0x01, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x6b, 0x6a, 0x69, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x2f, 0x63,
	0x4f, 0x4b, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cOKC_proto_rawDescOnce sync.Once
	file_cOKC_proto_rawDescData = file_cOKC_proto_rawDesc
)

func file_cOKC_proto_rawDescGZIP() []byte {
	file_cOKC_proto_rawDescOnce.Do(func() {
		file_cOKC_proto_rawDescData = protoimpl.X.CompressGZIP(file_cOKC_proto_rawDescData)
	})
	return file_cOKC_proto_rawDescData
}

var file_cOKC_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cOKC_proto_goTypes = []interface{}{
	(*Approval)(nil),              // 0: cOKC.Approval
	(*MintClaimed)(nil),           // 1: cOKC.MintClaimed
	(*RankClaimed)(nil),           // 2: cOKC.RankClaimed
	(*Staked)(nil),                // 3: cOKC.Staked
	(*Transfer)(nil),              // 4: cOKC.Transfer
	(*Withdrawn)(nil),             // 5: cOKC.Withdrawn
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_cOKC_proto_depIdxs = []int32{
	6, // 0: cOKC.Approval.ts:type_name -> google.protobuf.Timestamp
	6, // 1: cOKC.MintClaimed.ts:type_name -> google.protobuf.Timestamp
	6, // 2: cOKC.RankClaimed.ts:type_name -> google.protobuf.Timestamp
	6, // 3: cOKC.Staked.ts:type_name -> google.protobuf.Timestamp
	6, // 4: cOKC.Transfer.ts:type_name -> google.protobuf.Timestamp
	6, // 5: cOKC.Withdrawn.ts:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_cOKC_proto_init() }
func file_cOKC_proto_init() {
	if File_cOKC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cOKC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Approval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cOKC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintClaimed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cOKC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankClaimed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cOKC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cOKC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cOKC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdrawn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cOKC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cOKC_proto_goTypes,
		DependencyIndexes: file_cOKC_proto_depIdxs,
		MessageInfos:      file_cOKC_proto_msgTypes,
	}.Build()
	File_cOKC_proto = out.File
	file_cOKC_proto_rawDesc = nil
	file_cOKC_proto_goTypes = nil
	file_cOKC_proto_depIdxs = nil
}
