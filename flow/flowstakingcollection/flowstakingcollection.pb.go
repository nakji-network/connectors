// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: flowstakingcollection.proto

package flowstakingcollection

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeAddedToStakingCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber     uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxID            []byte                 `protobuf:"bytes,3,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex        uint64                 `protobuf:"varint,4,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	NodeID          string                 `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Role            uint32                 `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	AmountCommitted float64                `protobuf:"fixed64,7,opt,name=amountCommitted,proto3" json:"amountCommitted,omitempty"`
	Address         []byte                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NodeAddedToStakingCollection) Reset() {
	*x = NodeAddedToStakingCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstakingcollection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAddedToStakingCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAddedToStakingCollection) ProtoMessage() {}

func (x *NodeAddedToStakingCollection) ProtoReflect() protoreflect.Message {
	mi := &file_flowstakingcollection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAddedToStakingCollection.ProtoReflect.Descriptor instead.
func (*NodeAddedToStakingCollection) Descriptor() ([]byte, []int) {
	return file_flowstakingcollection_proto_rawDescGZIP(), []int{0}
}

func (x *NodeAddedToStakingCollection) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *NodeAddedToStakingCollection) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NodeAddedToStakingCollection) GetTxID() []byte {
	if x != nil {
		return x.TxID
	}
	return nil
}

func (x *NodeAddedToStakingCollection) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *NodeAddedToStakingCollection) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeAddedToStakingCollection) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *NodeAddedToStakingCollection) GetAmountCommitted() float64 {
	if x != nil {
		return x.AmountCommitted
	}
	return 0
}

func (x *NodeAddedToStakingCollection) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type DelegatorAddedToStakingCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber     uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxID            []byte                 `protobuf:"bytes,3,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex        uint64                 `protobuf:"varint,4,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	NodeID          string                 `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	DelegatorID     uint32                 `protobuf:"varint,6,opt,name=delegatorID,proto3" json:"delegatorID,omitempty"`
	AmountCommitted float64                `protobuf:"fixed64,7,opt,name=amountCommitted,proto3" json:"amountCommitted,omitempty"`
	Address         []byte                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DelegatorAddedToStakingCollection) Reset() {
	*x = DelegatorAddedToStakingCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstakingcollection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorAddedToStakingCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorAddedToStakingCollection) ProtoMessage() {}

func (x *DelegatorAddedToStakingCollection) ProtoReflect() protoreflect.Message {
	mi := &file_flowstakingcollection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatorAddedToStakingCollection.ProtoReflect.Descriptor instead.
func (*DelegatorAddedToStakingCollection) Descriptor() ([]byte, []int) {
	return file_flowstakingcollection_proto_rawDescGZIP(), []int{1}
}

func (x *DelegatorAddedToStakingCollection) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *DelegatorAddedToStakingCollection) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *DelegatorAddedToStakingCollection) GetTxID() []byte {
	if x != nil {
		return x.TxID
	}
	return nil
}

func (x *DelegatorAddedToStakingCollection) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *DelegatorAddedToStakingCollection) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *DelegatorAddedToStakingCollection) GetDelegatorID() uint32 {
	if x != nil {
		return x.DelegatorID
	}
	return 0
}

func (x *DelegatorAddedToStakingCollection) GetAmountCommitted() float64 {
	if x != nil {
		return x.AmountCommitted
	}
	return 0
}

func (x *DelegatorAddedToStakingCollection) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type NodeRemovedFromStakingCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxID        []byte                 `protobuf:"bytes,3,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,4,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	NodeID      string                 `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Role        uint32                 `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	Address     []byte                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NodeRemovedFromStakingCollection) Reset() {
	*x = NodeRemovedFromStakingCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstakingcollection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRemovedFromStakingCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRemovedFromStakingCollection) ProtoMessage() {}

func (x *NodeRemovedFromStakingCollection) ProtoReflect() protoreflect.Message {
	mi := &file_flowstakingcollection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRemovedFromStakingCollection.ProtoReflect.Descriptor instead.
func (*NodeRemovedFromStakingCollection) Descriptor() ([]byte, []int) {
	return file_flowstakingcollection_proto_rawDescGZIP(), []int{2}
}

func (x *NodeRemovedFromStakingCollection) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *NodeRemovedFromStakingCollection) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *NodeRemovedFromStakingCollection) GetTxID() []byte {
	if x != nil {
		return x.TxID
	}
	return nil
}

func (x *NodeRemovedFromStakingCollection) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *NodeRemovedFromStakingCollection) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeRemovedFromStakingCollection) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *NodeRemovedFromStakingCollection) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type DelegatorRemovedFromStakingCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxID        []byte                 `protobuf:"bytes,3,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,4,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	NodeID      string                 `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	DelegatorID uint32                 `protobuf:"varint,6,opt,name=delegatorID,proto3" json:"delegatorID,omitempty"`
	Address     []byte                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DelegatorRemovedFromStakingCollection) Reset() {
	*x = DelegatorRemovedFromStakingCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstakingcollection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegatorRemovedFromStakingCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatorRemovedFromStakingCollection) ProtoMessage() {}

func (x *DelegatorRemovedFromStakingCollection) ProtoReflect() protoreflect.Message {
	mi := &file_flowstakingcollection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatorRemovedFromStakingCollection.ProtoReflect.Descriptor instead.
func (*DelegatorRemovedFromStakingCollection) Descriptor() ([]byte, []int) {
	return file_flowstakingcollection_proto_rawDescGZIP(), []int{3}
}

func (x *DelegatorRemovedFromStakingCollection) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *DelegatorRemovedFromStakingCollection) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *DelegatorRemovedFromStakingCollection) GetTxID() []byte {
	if x != nil {
		return x.TxID
	}
	return nil
}

func (x *DelegatorRemovedFromStakingCollection) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *DelegatorRemovedFromStakingCollection) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *DelegatorRemovedFromStakingCollection) GetDelegatorID() uint32 {
	if x != nil {
		return x.DelegatorID
	}
	return 0
}

func (x *DelegatorRemovedFromStakingCollection) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type MachineAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,2,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxID        []byte                 `protobuf:"bytes,3,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,4,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	NodeID      string                 `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Role        uint32                 `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	Address     []byte                 `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MachineAccountCreated) Reset() {
	*x = MachineAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstakingcollection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineAccountCreated) ProtoMessage() {}

func (x *MachineAccountCreated) ProtoReflect() protoreflect.Message {
	mi := &file_flowstakingcollection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineAccountCreated.ProtoReflect.Descriptor instead.
func (*MachineAccountCreated) Descriptor() ([]byte, []int) {
	return file_flowstakingcollection_proto_rawDescGZIP(), []int{4}
}

func (x *MachineAccountCreated) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *MachineAccountCreated) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *MachineAccountCreated) GetTxID() []byte {
	if x != nil {
		return x.TxID
	}
	return nil
}

func (x *MachineAccountCreated) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *MachineAccountCreated) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *MachineAccountCreated) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *MachineAccountCreated) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_flowstakingcollection_proto protoreflect.FileDescriptor

var file_flowstakingcollection_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x1c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x9f, 0x02, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x20, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xf9, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x15,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x6b, 0x6a, 0x69, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_flowstakingcollection_proto_rawDescOnce sync.Once
	file_flowstakingcollection_proto_rawDescData = file_flowstakingcollection_proto_rawDesc
)

func file_flowstakingcollection_proto_rawDescGZIP() []byte {
	file_flowstakingcollection_proto_rawDescOnce.Do(func() {
		file_flowstakingcollection_proto_rawDescData = protoimpl.X.CompressGZIP(file_flowstakingcollection_proto_rawDescData)
	})
	return file_flowstakingcollection_proto_rawDescData
}

var file_flowstakingcollection_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_flowstakingcollection_proto_goTypes = []interface{}{
	(*NodeAddedToStakingCollection)(nil),          // 0: flowstakingcollection.NodeAddedToStakingCollection
	(*DelegatorAddedToStakingCollection)(nil),     // 1: flowstakingcollection.DelegatorAddedToStakingCollection
	(*NodeRemovedFromStakingCollection)(nil),      // 2: flowstakingcollection.NodeRemovedFromStakingCollection
	(*DelegatorRemovedFromStakingCollection)(nil), // 3: flowstakingcollection.DelegatorRemovedFromStakingCollection
	(*MachineAccountCreated)(nil),                 // 4: flowstakingcollection.MachineAccountCreated
	(*timestamppb.Timestamp)(nil),                 // 5: google.protobuf.Timestamp
}
var file_flowstakingcollection_proto_depIdxs = []int32{
	5, // 0: flowstakingcollection.NodeAddedToStakingCollection.ts:type_name -> google.protobuf.Timestamp
	5, // 1: flowstakingcollection.DelegatorAddedToStakingCollection.ts:type_name -> google.protobuf.Timestamp
	5, // 2: flowstakingcollection.NodeRemovedFromStakingCollection.ts:type_name -> google.protobuf.Timestamp
	5, // 3: flowstakingcollection.DelegatorRemovedFromStakingCollection.ts:type_name -> google.protobuf.Timestamp
	5, // 4: flowstakingcollection.MachineAccountCreated.ts:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_flowstakingcollection_proto_init() }
func file_flowstakingcollection_proto_init() {
	if File_flowstakingcollection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flowstakingcollection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAddedToStakingCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstakingcollection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorAddedToStakingCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstakingcollection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRemovedFromStakingCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstakingcollection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegatorRemovedFromStakingCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstakingcollection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flowstakingcollection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flowstakingcollection_proto_goTypes,
		DependencyIndexes: file_flowstakingcollection_proto_depIdxs,
		MessageInfos:      file_flowstakingcollection_proto_msgTypes,
	}.Build()
	File_flowstakingcollection_proto = out.File
	file_flowstakingcollection_proto_rawDesc = nil
	file_flowstakingcollection_proto_goTypes = nil
	file_flowstakingcollection_proto_depIdxs = nil
}
