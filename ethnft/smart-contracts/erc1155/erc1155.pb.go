// Code generated - DO NOT EDIT.
// This file is a generated protobuf definition and any manual changes will be lost.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: erc1155.proto

package erc1155

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalForAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Account     []byte                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Operator    []byte                 `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Approved    bool                   `protobuf:"varint,4,opt,name=approved,proto3" json:"approved,omitempty"`
	BlockNumber uint64                 `protobuf:"varint,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,6,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,7,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *ApprovalForAll) Reset() {
	*x = ApprovalForAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_erc1155_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalForAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalForAll) ProtoMessage() {}

func (x *ApprovalForAll) ProtoReflect() protoreflect.Message {
	mi := &file_erc1155_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalForAll.ProtoReflect.Descriptor instead.
func (*ApprovalForAll) Descriptor() ([]byte, []int) {
	return file_erc1155_proto_rawDescGZIP(), []int{0}
}

func (x *ApprovalForAll) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ApprovalForAll) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ApprovalForAll) GetOperator() []byte {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *ApprovalForAll) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *ApprovalForAll) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ApprovalForAll) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *ApprovalForAll) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type TransferBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Operator    []byte                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	From        []byte                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To          []byte                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Ids         [][]byte               `protobuf:"bytes,5,rep,name=ids,proto3" json:"ids,omitempty"`       // uint256
	Values      [][]byte               `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,7,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,8,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *TransferBatch) Reset() {
	*x = TransferBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_erc1155_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferBatch) ProtoMessage() {}

func (x *TransferBatch) ProtoReflect() protoreflect.Message {
	mi := &file_erc1155_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferBatch.ProtoReflect.Descriptor instead.
func (*TransferBatch) Descriptor() ([]byte, []int) {
	return file_erc1155_proto_rawDescGZIP(), []int{1}
}

func (x *TransferBatch) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *TransferBatch) GetOperator() []byte {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *TransferBatch) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferBatch) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferBatch) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TransferBatch) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *TransferBatch) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TransferBatch) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *TransferBatch) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type TransferSingle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Operator    []byte                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	From        []byte                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To          []byte                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Id          []byte                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`       // uint256
	Value       []byte                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,7,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,8,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *TransferSingle) Reset() {
	*x = TransferSingle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_erc1155_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferSingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSingle) ProtoMessage() {}

func (x *TransferSingle) ProtoReflect() protoreflect.Message {
	mi := &file_erc1155_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSingle.ProtoReflect.Descriptor instead.
func (*TransferSingle) Descriptor() ([]byte, []int) {
	return file_erc1155_proto_rawDescGZIP(), []int{2}
}

func (x *TransferSingle) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *TransferSingle) GetOperator() []byte {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *TransferSingle) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferSingle) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferSingle) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TransferSingle) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TransferSingle) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TransferSingle) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *TransferSingle) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type URI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Value       string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Id          []byte                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"` // uint256
	BlockNumber uint64                 `protobuf:"varint,4,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	LogIndex    uint64                 `protobuf:"varint,5,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	TxHash      []byte                 `protobuf:"bytes,6,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *URI) Reset() {
	*x = URI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_erc1155_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_erc1155_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_erc1155_proto_rawDescGZIP(), []int{3}
}

func (x *URI) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *URI) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *URI) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *URI) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *URI) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *URI) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

var File_erc1155_proto protoreflect.FileDescriptor

var file_erc1155_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xf8,
	0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xad, 0x01, 0x0a, 0x03, 0x55, 0x52,
	0x49, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x6b, 0x6a, 0x69, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x65, 0x74, 0x68, 0x6e, 0x66, 0x74, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x2d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x65, 0x72, 0x63, 0x31, 0x31, 0x35, 0x35, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_erc1155_proto_rawDescOnce sync.Once
	file_erc1155_proto_rawDescData = file_erc1155_proto_rawDesc
)

func file_erc1155_proto_rawDescGZIP() []byte {
	file_erc1155_proto_rawDescOnce.Do(func() {
		file_erc1155_proto_rawDescData = protoimpl.X.CompressGZIP(file_erc1155_proto_rawDescData)
	})
	return file_erc1155_proto_rawDescData
}

var file_erc1155_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_erc1155_proto_goTypes = []interface{}{
	(*ApprovalForAll)(nil),        // 0: erc1155.ApprovalForAll
	(*TransferBatch)(nil),         // 1: erc1155.TransferBatch
	(*TransferSingle)(nil),        // 2: erc1155.TransferSingle
	(*URI)(nil),                   // 3: erc1155.URI
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_erc1155_proto_depIdxs = []int32{
	4, // 0: erc1155.ApprovalForAll.ts:type_name -> google.protobuf.Timestamp
	4, // 1: erc1155.TransferBatch.ts:type_name -> google.protobuf.Timestamp
	4, // 2: erc1155.TransferSingle.ts:type_name -> google.protobuf.Timestamp
	4, // 3: erc1155.URI.ts:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_erc1155_proto_init() }
func file_erc1155_proto_init() {
	if File_erc1155_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_erc1155_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalForAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_erc1155_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_erc1155_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferSingle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_erc1155_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_erc1155_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_erc1155_proto_goTypes,
		DependencyIndexes: file_erc1155_proto_depIdxs,
		MessageInfos:      file_erc1155_proto_msgTypes,
	}.Build()
	File_erc1155_proto = out.File
	file_erc1155_proto_rawDesc = nil
	file_erc1155_proto_goTypes = nil
	file_erc1155_proto_depIdxs = nil
}
